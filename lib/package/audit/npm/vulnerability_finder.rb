require 'open3'

require_relative '../const/cmd'
require_relative '../enum/vulnerability_type'

module Package
  module Audit
    module Npm
      class VulnerabilityFinder
        AUDIT_ADVISORY_REGEX = /^{"type":"auditAdvisory".*$/

        def initialize(dir, pkgs)
          @dir = dir
          @pkg_hash = pkgs.to_h { |pkg| [pkg.name, pkg] }
          @vuln_hash = {}
        end

        def run
          # Suppress Node.js url.parse deprecation warnings from yarn audit command
          command = format(Const::Cmd::YARN_AUDIT_JSON, @dir)
          env_vars = { 'NODE_NO_WARNINGS' => '1' }

          json_string_lines, = Open3.capture3(env_vars, command)
          array = json_string_lines.scan(AUDIT_ADVISORY_REGEX)

          vulnerability_json_array = JSON.parse("[#{array.join(',')}]", symbolize_names: true)
          vulnerability_json_array.each do |vulnerability_json|
            update_meta_data(vulnerability_json)
          end
          @vuln_hash.values
        end

        private

        def update_meta_data(json)
          resolution_path = json.dig(:data, :resolution, :path)
          return unless resolution_path # Skip if no resolution path (private package)

          parent_name = resolution_path.split('>').first
          advisory = json[:data][:advisory]
          package_info = extract_package_info(advisory)
          update_vulnerability_info(package_info, parent_name, advisory[:severity])
        end

        def extract_package_info(advisory)
          {
            name: advisory[:module_name],
            version: advisory[:findings][0][:version]
          }
        end

        def update_vulnerability_info(package_info, parent_name, severity)
          name = package_info[:name]
          version = package_info[:version]
          full_name = "#{name}@#{version}"
          vulnerability = severity || Enum::VulnerabilityType::UNKNOWN

          @vuln_hash[full_name] ||= Package.new(name, version, 'node')
          @vuln_hash[full_name].update vulnerabilities: @vuln_hash[full_name].vulnerabilities + [vulnerability]
          @vuln_hash[full_name].update groups: @pkg_hash[parent_name]&.groups&.map(&:to_s) || []
        end
      end
    end
  end
end
